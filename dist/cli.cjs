#!/usr/bin/env node
"use strict";var to=Object.create;var we=Object.defineProperty;var ao=Object.getOwnPropertyDescriptor;var no=Object.getOwnPropertyNames;var so=Object.getPrototypeOf,io=Object.prototype.hasOwnProperty;var co=(r,e)=>{for(var o in e)we(r,o,{get:e[o],enumerable:!0})},po=(r,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of no(e))!io.call(r,a)&&a!==o&&we(r,a,{get:()=>e[a],enumerable:!(t=ao(e,a))||t.enumerable});return r};var c=(r,e,o)=>(o=r!=null?to(so(r)):{},po(e||!r||!r.__esModule?we(o,"default",{value:r,enumerable:!0}):o,r));var oo=c(require("chalk")),y=require("commander");var er=c(require("chalk")),rr=c(require("update-check"));var L={name:"turbo-gen",version:"1.0.0",description:"",main:"index.js",scripts:{build:"tsup",test:"jest",lint:"eslint src/**/*.ts","check-types":"tsc --noEmit"},keywords:[],author:"sramam",license:"ISC",dependencies:{"@manypkg/find-root":"^2.2.1","async-retry":"^1.3.3",chalk:"2.4.2",commander:"^10.0.0",execa:"^7.1.1","fast-glob":"^3.3.0","fs-extra":"^10.1.0",got:"^13.0.0","gradient-string":"^2.0.2",inquirer:"^8.2.4","js-yaml":"^4.1.0",json5:"^2.2.3",minimatch:"^9.0.0","node-plop":"^0.26.3",ora:"^6.3.1",semver:"^7.3.8",tar:"^6.1.15","ts-node":"^10.9.1","update-check":"^1.5.4","validate-npm-package-name":"^5.0.0"},devDependencies:{"@types/fs-extra":"^9.0.13","@types/got":"^9.6.12","@types/inquirer":"^8.2.5","@types/jest":"^27.4.0","@types/node":"^16.11.12","@types/semver":"^7.3.9","@types/tar":"^6.1.5","@types/validate-npm-package-name":"^4.0.0",eslint:"^7.23.0",jest:"^27.4.3","ts-jest":"^27.1.1",tsup:"^6.7.0",typescript:"^4.5.5"},files:["dist"]};var mo=(0,rr.default)(L).catch(()=>null);async function te(){try{let r=await mo;r!=null&&r.latest&&(console.log(),console.log(er.default.yellow.bold(`A new version of \`${L.name}\` is available!`)),console.log()),process.exit()}catch{}}var or=require("@manypkg/find-root");var be=c(require("fs")),F=c(require("path"));function U({target:r,cwd:e,contentCheck:o}){let t=F.default.parse(e).root,a=!1;for(;!a&&e!==t;){if(o)try{let n=be.default.readFileSync(F.default.join(e,r)).toString();if(o(n)){a=!0;break}}catch{}else if(be.default.existsSync(F.default.join(e,r))){a=!0;break}e=F.default.dirname(e)}return a?e:null}var tr=c(require("json5"));function go(r){return!tr.default.parse(r).extends}var Pe={};function H(r,e){var n;let o=(n=e==null?void 0:e.cache)!=null?n:!0,t=r||process.cwd();if(o&&Pe[t])return Pe[t];let a=U({target:"turbo.json",cwd:t,contentCheck:go});if(!a)try{if(a=(0,or.findRootSync)(t),!a)return null}catch{return null}return o&&(Pe[t]=a),a}var q=c(require("fs")),G=c(require("path"));var ar=c(require("js-yaml")),nr=require("fast-glob"),sr=c(require("json5")),fo="turbo.json";var xe={};function uo(r){try{if(q.default.existsSync(G.default.join(r,"pnpm-workspace.yaml"))){let e=ar.default.load(q.default.readFileSync(G.default.join(r,"pnpm-workspace.yaml"),"utf8"));return(e==null?void 0:e.packages)||[]}else{let e=JSON.parse(q.default.readFileSync(G.default.join(r,"package.json"),"utf8"));return e!=null&&e.workspaces?"packages"in(e==null?void 0:e.workspaces)?e.workspaces.packages||[]:(e==null?void 0:e.workspaces)||[]:[]}}catch{return[]}}function ve(r,e){var n;let o=H(r,e),t=[],a=(n=e==null?void 0:e.cache)!=null?n:!0;if(a&&r&&xe[r])return xe[r];if(o){let i=uo(o).map(l=>`${l}/turbo.json`);(0,nr.sync)([fo,...i],{cwd:o,onlyFiles:!0,followSymbolicLinks:!1,suppressErrors:!0}).map(l=>G.default.join(o,l)).forEach(l=>{try{let f=q.default.readFileSync(l,"utf8"),u=sr.default.parse(f),g=G.default.dirname(l)===o;if(g){if("extends"in u)return}else if(!("extends"in u))return;t.push({config:u,turboConfigPath:l,workspacePath:G.default.dirname(l),isRootConfig:g})}catch(f){console.warn(f)}})}return a&&r&&(xe[r]=t),t}var ko=c(require("execa"));var ir=c(require("fs-extra")),yo=[".DS_Store",".git",".gitattributes",".gitignore",".gitlab-ci.yml",".hg",".hgcheck",".hgignore",".idea",".npmignore",".travis.yml","LICENSE","Thumbs.db","docs","mkdocs.yml","npm-debug.log","yarn-debug.log","yarn-error.log","yarnrc.yml",".yarn"];function B(r){let e=ir.default.readdirSync(r).filter(o=>!yo.includes(o)).filter(o=>!/\.iml$/.test(o));return{isEmpty:e.length===0,conflicts:e}}var Se=c(require("path")),Ae=c(require("fs-extra")),je=c(require("chalk"));function ae(r){let e=Se.default.resolve(r),o=Se.default.basename(e),t=Ae.default.existsSync(e),a=Ae.default.lstatSync(e,{throwIfNoEntry:!1});if(a&&!a.isDirectory())return{valid:!1,root:e,projectName:o,error:`${je.default.dim(o)} is not a directory - please try a different location`};if(t){let{isEmpty:n,conflicts:s}=B(e);if(!n)return{valid:!1,root:e,projectName:o,error:`${je.default.dim(o)} (${e}) has ${s.length} conflicting ${s.length===1?"file":"files"} - please try a different location`}}return{valid:!0,root:e,projectName:o}}var se=c(require("got")),$e=c(require("tar")),cr=require("stream"),pr=require("util"),lr=require("path"),mr=require("os"),K=require("fs"),gr=require("url"),ho=(0,pr.promisify)(cr.Stream.pipeline);async function ne(r){try{return(await se.default.head(r)).statusCode===200}catch{return!1}}async function Re(r,e){let[,o,t,a,n,...s]=r.pathname.split("/"),i=e?e.replace(/^\//,""):s.join("/");if(a===void 0||a===""&&n===void 0)try{let l=await(0,se.default)(`https://api.github.com/repos/${o}/${t}`),f=JSON.parse(l.body);return{username:o,name:t,branch:f.default_branch,filePath:i}}catch{return}let p=e?`${n}/${s.join("/")}`.replace(new RegExp(`/${i}|/$`),""):n;if(o&&t&&p&&a==="tree")return{username:o,name:t,branch:p,filePath:i}}function Ce({username:r,name:e,branch:o,filePath:t}){let a=`https://api.github.com/repos/${r}/${e}/contents`,n=`${t?`/${t}`:""}/package.json`;return ne(a+n+`?ref=${o}`)}function Ee(r){try{let e=new gr.URL(r);return ne(e.href)}catch{return ne(`https://api.github.com/repos/vercel/turbo/contents/examples/${encodeURIComponent(r)}`)}}async function fr(r,e){let o=(0,lr.join)((0,mr.tmpdir)(),`${e}.temp-${Date.now()}`);return await ho(se.default.stream(r),(0,K.createWriteStream)(o)),o}async function De(r,{username:e,name:o,branch:t,filePath:a}){let n=await fr(`https://codeload.github.com/${e}/${o}/tar.gz/${t}`,"turbo-ct-example");await $e.default.x({file:n,cwd:r,strip:a?a.split("/").length+1:1,filter:s=>s.startsWith(`${o}-${t.replace(/\//g,"-")}${a?`/${a}/`:"/"}`)}),await K.promises.unlink(n)}async function Ge(r,e){let o=await fr("https://codeload.github.com/vercel/turbo/tar.gz/main","turbo-ct-example");await $e.default.x({file:o,cwd:r,strip:2+e.split("/").length,filter:t=>t.includes(`turbo-main/examples/${e}/`)}),await K.promises.unlink(o)}var ie=c(require("fs-extra"));async function Oe(r){try{return await ie.default.access(r,(ie.default.constants||ie.default).W_OK),!0}catch{return!1}}var _e=c(require("async-retry")),A=c(require("chalk")),ce=c(require("fs-extra")),_=c(require("path"));var m={};co(m,{dimmed:()=>vo,error:()=>P,info:()=>Po,item:()=>So,turboBlue:()=>W,turboGradient:()=>bo,turboLoader:()=>We,turboRed:()=>hr,warn:()=>xo,yellow:()=>wr});var Y=c(require("chalk")),ur=c(require("ora")),dr=c(require("gradient-string")),kr="#0099F7",yr="#F11712",wo="#FFFF00",bo=(0,dr.default)(kr,yr),W=Y.default.hex(kr),hr=Y.default.hex(yr),wr=Y.default.hex(wo),We=r=>(0,ur.default)({text:r,spinner:{frames:["   ",W(">  "),W(">> "),W(">>>")]}}),Po=(...r)=>{console.log(W.bold(">>>"),...r)},P=(...r)=>{console.error(hr.bold(">>>"),...r)},xo=(...r)=>{console.error(wr.bold(">>>"),...r)},vo=(...r)=>{console.log(Y.default.dim(...r))},So=(...r)=>{console.log(W.bold("  \u2022"),...r)};var Me=class extends Error{};async function Te({appPath:r,example:e,isDefaultExample:o,examplePath:t}){let a,n;if(o)a={username:"vercel",name:"turbo",branch:"main",filePath:"examples/basic"};else{try{n=new URL(e)}catch(b){b.code!=="ERR_INVALID_URL"&&(P(b),process.exit(1))}n?(n.origin!=="https://github.com"&&(P(`Invalid URL: ${A.default.red(`"${e}"`)}. Only GitHub repositories are supported. Please use a GitHub URL and try again.`),process.exit(1)),a=await Re(n,t),a||(P(`Unable to fetch repository information from: ${A.default.red(`"${e}"`)}. Please fix the URL and try again.`),process.exit(1)),await Ce(a)||(P(`Could not locate the repository for ${A.default.red(`"${e}"`)}. Please check that the repository exists and try again.`),process.exit(1))):await Ee(e)||(P(`Could not locate an example named ${A.default.red(`"${e}"`)}. It could be due to the following:
`,`1. Your spelling of example ${A.default.red(`"${e}"`)} might be incorrect.
`,"2. You might not be connected to the internet or you are behind a proxy."),process.exit(1))}let s=_.default.resolve(r);await Oe(_.default.dirname(s))||(P("The application path is not writable, please check folder permissions and try again."),P("It is likely you do not have write permissions for this folder."),process.exit(1));let i=_.default.basename(s);try{await ce.default.mkdir(s,{recursive:!0})}catch(b){P("Unable to create project directory"),console.error(b),process.exit(1)}let{isEmpty:p,conflicts:l}=B(s);p||(P(`${A.default.dim(s)} has ${l.length} conflicting ${l.length===1?"file":"files"} - please try a different location`),process.exit(1));let f=process.cwd();process.chdir(s);let u=We("Downloading files...");try{!o&&a?(console.log(`
Downloading files from repo ${A.default.cyan(e)}. This might take a moment.`),console.log(),u.start(),await(0,_e.default)(()=>De(s,a),{retries:3})):(console.log(`
Downloading files${o?"":` for example ${A.default.cyan(e)}`}. This might take a moment.`),console.log(),u.start(),await(0,_e.default)(()=>Ge(s,e),{retries:3}))}catch(b){let Ze=function(he){return typeof he=="object"&&he!==null&&typeof he.message=="string"};var _n=Ze;throw new Me(Ze(b)?b.message:b+"")}finally{u.stop()}let g=_.default.join(s,"package.json"),w=ce.default.existsSync(g),oe=[];if(w){let b;try{b=ce.default.readJsonSync(g)}catch{}b&&oe.push(...Object.keys(b.scripts||{}))}let Qe=r;return _.default.join(f,i)===r&&(Qe=i),{cdPath:Qe,hasPackageJson:w,availableScripts:oe,repoInfo:a}}function Je(r,e={to:"camel"}){switch(e.to){case"camel":return r.replace(/([-_][a-z])/g,o=>o.toUpperCase().replace("-","").replace("_",""));default:throw new Error("Not implemented")}}var d=class extends Error{constructor(o,t){var a;super(o);this.name="ConvertError",this.type=(a=t==null?void 0:t.type)!=null?a:"unknown",Error.captureStackTrace(this,d)}};var x=c(require("fs-extra")),I=c(require("path")),jr=c(require("execa"));var vr=c(require("fs-extra")),Sr=c(require("chalk")),Ar=c(require("path"));var z=c(require("fs-extra")),R=c(require("path")),br=c(require("fast-glob")),Pr=c(require("js-yaml"));var jo=/^(?!_)(.+)@(.+)$/;function h({workspaceRoot:r}){let e=R.default.join(r,"package.json");try{return z.default.readJsonSync(e,"utf8")}catch(o){if(o&&typeof o=="object"&&"code"in o){if(o.code==="ENOENT")throw new d(`no "package.json" found at ${r}`,{type:"package_json-missing"});if(o.code==="EJSONPARSE")throw new d(`failed to parse "package.json" at ${r}`,{type:"package_json-parse_error"})}throw new Error(`unexpected error reading "package.json" at ${r}`)}}function M({workspaceRoot:r}){let{packageManager:e}=h({workspaceRoot:r});if(e)try{let o=e.match(jo);if(o){let[t,a]=o;return a}}catch{}}function O({workspaceRoot:r}){let e=h({workspaceRoot:r}),o=R.default.basename(r),{name:t=o,description:a}=e;return{name:t,description:a}}function Ie({workspaceRoot:r}){let e=R.default.join(r,"pnpm-workspace.yaml");if(z.default.existsSync(e))try{let o=Pr.default.load(z.default.readFileSync(e,"utf8"));if(o instanceof Object&&"packages"in o&&Array.isArray(o.packages))return o.packages}catch{throw new d(`failed to parse ${e}`,{type:"pnpm-workspace_parse_error"})}return[]}function T({root:r,lockFile:e,workspaceConfig:o}){let t=n=>R.default.join(r,n),a={root:r,lockfile:t(e),packageJson:t("package.json"),nodeModules:t("node_modules")};return o&&(a.workspaceConfig=t(o)),a}function J({workspaceRoot:r,workspaceGlobs:e}){return e?e.flatMap(o=>{let t=`${o}/package.json`;return br.default.sync(t,{onlyFiles:!0,absolute:!0,cwd:r})}).map(o=>{let t=R.default.dirname(o),{name:a,description:n}=O({workspaceRoot:t});return{name:a,description:n,paths:{root:t,packageJson:o,nodeModules:R.default.join(t,"node_modules")}}}):[]}function xr({directory:r}){let e=R.default.resolve(process.cwd(),r);return{exists:z.default.existsSync(e),absolute:e}}function j({packageManager:r,action:e,project:o}){let t=o.workspaceData.globs.length>0;return`${e==="remove"?"Removing":"Adding"} ${r} ${t?"workspaces":""} ${e==="remove"?"from":"to"} ${o.name}`}function $o({dependencyList:r,project:e,to:o}){let t=[];return e.workspaceData.workspaces.forEach(a=>{let{name:n}=a;if(r[n]){let s=r[n],i=s.startsWith("workspace:")?s.slice(10):s;r[n]=o.name==="pnpm"?`workspace:${i}`:i,t.push(n)}}),{dependencyList:r,updated:t}}function S({project:r,workspace:e,to:o,logger:t,options:a}){if(["yarn","npm"].includes(o.name)&&["yarn","npm"].includes(r.packageManager))return;let n=h({workspaceRoot:e.paths.root}),s={dependencies:[],devDependencies:[],peerDependencies:[],optionalDependencies:[]},i=["dependencies","devDependencies","peerDependencies","optionalDependencies"];i.forEach(u=>{let g=n[u];if(g){let{updated:w,dependencyList:oe}=$o({dependencyList:g,project:r,to:o});n[u]=oe,s[u]=w}});let p=u=>{let g=s[u].length;if(g>0)return`${Sr.default.green(g.toString())} ${u}`},l=i.map(p).filter(Boolean),f=`./${Ar.default.relative(r.paths.root,e.paths.packageJson)}`;if(l.length>=1){let u="updating";l.forEach((g,w)=>{l.length===1?u+=` ${g} in ${f}`:w===l.length-1?u+=`and ${g} in ${f}`:u+=` ${g}, `}),t.workspaceStep(u)}else t.workspaceStep(`no workspace dependencies found in ${f}`);a!=null&&a.dry||vr.default.writeJSONSync(e.paths.packageJson,n,{spaces:2})}async function $r(r){let e=I.default.join(r.workspaceRoot,"pnpm-lock.yaml"),o=I.default.join(r.workspaceRoot,"pnpm-workspace.yaml"),t=M({workspaceRoot:r.workspaceRoot});return x.default.existsSync(e)||x.default.existsSync(o)||t==="pnpm"}async function Ro(r){if(!await $r(r))throw new d("Not a pnpm project",{type:"package_manager-unexpected"});let{name:o,description:t}=O(r);return{name:o,description:t,packageManager:"pnpm",paths:T({root:r.workspaceRoot,lockFile:"pnpm-lock.yaml",workspaceConfig:"pnpm-workspace.yaml"}),workspaceData:{globs:Ie(r),workspaces:J({workspaceGlobs:Ie(r),...r})}}}async function Co(r){let{project:e,to:o,logger:t,options:a}=r,n=e.workspaceData.globs.length>0;t.mainStep(j({action:"create",packageManager:"pnpm",project:e}));let s=h({workspaceRoot:e.paths.root});t.rootHeader(),s.packageManager=`${o.name}@${o.version}`,t.rootStep(`adding "packageManager" field to ${e.name} root "package.json"`),a!=null&&a.dry||(x.default.writeJSONSync(e.paths.packageJson,s,{spaces:2}),n&&(t.rootStep('adding "pnpm-workspace.yaml"'),x.default.writeFileSync(I.default.join(e.paths.root,"pnpm-workspace.yaml"),`packages:
${e.workspaceData.globs.map(i=>`  - "${i}"`).join(`
`)}`))),n&&(S({workspace:{name:"root",paths:e.paths},project:e,to:o,logger:t,options:a}),t.workspaceHeader(),e.workspaceData.workspaces.forEach(i=>S({workspace:i,project:e,to:o,logger:t,options:a})))}async function Eo(r){let{project:e,logger:o,options:t}=r,a=e.workspaceData.globs.length>0;o.mainStep(j({action:"remove",packageManager:"pnpm",project:e}));let n=h({workspaceRoot:e.paths.root});if(e.paths.workspaceConfig&&a&&(o.subStep('removing "pnpm-workspace.yaml"'),t!=null&&t.dry||x.default.rmSync(e.paths.workspaceConfig,{force:!0})),o.subStep(`removing "packageManager" field in ${e.name} root "package.json"`),delete n.packageManager,!(t!=null&&t.dry)){x.default.writeJSONSync(e.paths.packageJson,n,{spaces:2});let s=[e.paths.nodeModules,...e.workspaceData.workspaces.map(i=>i.paths.nodeModules)];try{o.subStep('removing "node_modules"'),await Promise.all(s.map(i=>x.default.rm(i,{recursive:!0,force:!0})))}catch{throw new d("Failed to remove node_modules",{type:"error_removing_node_modules"})}}}async function Do(r){let{project:e,logger:o,options:t}=r;o.subStep(`removing ${I.default.relative(e.paths.root,e.paths.lockfile)}`),t!=null&&t.dry||x.default.rmSync(e.paths.lockfile,{force:!0})}async function Go(r){let{project:e,logger:o,options:t}=r;if(e.packageManager!=="pnpm"&&(o.subStep(`converting ${I.default.relative(e.paths.root,e.paths.lockfile)} to pnpm-lock.yaml`),!(t!=null&&t.dry)&&x.default.existsSync(e.paths.lockfile)))try{await(0,jr.default)("pnpm",["import"],{stdio:"ignore",cwd:e.paths.root})}finally{x.default.rmSync(e.paths.lockfile,{force:!0})}}var Oo={detect:$r,read:Ro,create:Co,remove:Eo,clean:Do,convertLock:Go},Rr=Oo;var C=c(require("fs-extra")),V=c(require("path"));async function Cr(r){let e=V.default.join(r.workspaceRoot,"package-lock.json"),o=M({workspaceRoot:r.workspaceRoot});return C.default.existsSync(e)||o==="npm"}async function Wo(r){if(!await Cr(r))throw new d("Not an npm project",{type:"package_manager-unexpected"});let o=h(r),{name:t,description:a}=O(r);return{name:t,description:a,packageManager:"npm",paths:T({root:r.workspaceRoot,lockFile:"package-lock.json"}),workspaceData:{globs:o.workspaces||[],workspaces:J({workspaceGlobs:o.workspaces,...r})}}}async function _o(r){let{project:e,options:o,to:t,logger:a}=r,n=e.workspaceData.globs.length>0;a.mainStep(j({packageManager:"npm",action:"create",project:e}));let s=h({workspaceRoot:e.paths.root});a.rootHeader(),a.rootStep(`adding "packageManager" field to ${V.default.relative(e.paths.root,e.paths.packageJson)}`),s.packageManager=`${t.name}@${t.version}`,n?(a.rootStep(`adding "workspaces" field to ${V.default.relative(e.paths.root,e.paths.packageJson)}`),s.workspaces=e.workspaceData.globs,o!=null&&o.dry||C.default.writeJSONSync(e.paths.packageJson,s,{spaces:2}),S({workspace:{name:"root",paths:e.paths},project:e,to:t,logger:a,options:o}),a.workspaceHeader(),e.workspaceData.workspaces.forEach(i=>S({workspace:i,project:e,to:t,logger:a,options:o}))):o!=null&&o.dry||C.default.writeJSONSync(e.paths.packageJson,s,{spaces:2})}async function Mo(r){let{project:e,logger:o,options:t}=r,a=e.workspaceData.globs.length>0;o.mainStep(j({packageManager:"npm",action:"remove",project:e}));let n=h({workspaceRoot:e.paths.root});if(a&&(o.subStep(`removing "workspaces" field in ${e.name} root "package.json"`),delete n.workspaces),o.subStep(`removing "packageManager" field in ${e.name} root "package.json"`),delete n.packageManager,!(t!=null&&t.dry)){C.default.writeJSONSync(e.paths.packageJson,n,{spaces:2});let s=[e.paths.nodeModules,...e.workspaceData.workspaces.map(i=>i.paths.nodeModules)];try{o.subStep('removing "node_modules"'),await Promise.all(s.map(i=>C.default.rm(i,{recursive:!0,force:!0})))}catch{throw new d("Failed to remove node_modules",{type:"error_removing_node_modules"})}}}async function To(r){let{project:e,logger:o,options:t}=r;o.subStep(`removing ${V.default.relative(e.paths.root,e.paths.lockfile)}`),t!=null&&t.dry||C.default.rmSync(e.paths.lockfile,{force:!0})}async function Jo(r){let{project:e,options:o}=r;e.packageManager!=="npm"&&(o!=null&&o.dry||C.default.rmSync(e.paths.lockfile,{force:!0}))}var Io={detect:Cr,read:Wo,create:_o,remove:Mo,clean:To,convertLock:Jo},Er=Io;var E=c(require("fs-extra")),X=c(require("path"));async function Dr(r){let e=X.default.join(r.workspaceRoot,"yarn.lock"),o=M({workspaceRoot:r.workspaceRoot});return E.default.existsSync(e)||o==="yarn"}async function No(r){if(!await Dr(r))throw new d("Not a yarn project",{type:"package_manager-unexpected"});let o=h(r),{name:t,description:a}=O(r);return{name:t,description:a,packageManager:"yarn",paths:T({root:r.workspaceRoot,lockFile:"yarn.lock"}),workspaceData:{globs:o.workspaces||[],workspaces:J({workspaceGlobs:o.workspaces,...r})}}}async function Lo(r){let{project:e,to:o,logger:t,options:a}=r,n=e.workspaceData.globs.length>0;t.mainStep(j({packageManager:"yarn",action:"create",project:e}));let s=h({workspaceRoot:e.paths.root});t.rootHeader(),t.rootStep(`adding "packageManager" field to ${X.default.relative(e.paths.root,e.paths.packageJson)}`),s.packageManager=`${o.name}@${o.version}`,n?(t.rootStep(`adding "workspaces" field to ${X.default.relative(e.paths.root,e.paths.packageJson)}`),s.workspaces=e.workspaceData.globs,a!=null&&a.dry||E.default.writeJSONSync(e.paths.packageJson,s,{spaces:2}),S({workspace:{name:"root",paths:e.paths},project:e,to:o,logger:t,options:a}),t.workspaceHeader(),e.workspaceData.workspaces.forEach(i=>S({workspace:i,project:e,to:o,logger:t,options:a}))):a!=null&&a.dry||E.default.writeJSONSync(e.paths.packageJson,s,{spaces:2})}async function Fo(r){let{project:e,logger:o,options:t}=r,a=e.workspaceData.globs.length>0;o.mainStep(j({packageManager:"yarn",action:"remove",project:e}));let n=h({workspaceRoot:e.paths.root});if(a&&(o.subStep(`removing "workspaces" field in ${e.name} root "package.json"`),delete n.workspaces),o.subStep(`removing "packageManager" field in ${e.name} root "package.json"`),delete n.packageManager,!(t!=null&&t.dry)){E.default.writeJSONSync(e.paths.packageJson,n,{spaces:2});let s=[e.paths.nodeModules,...e.workspaceData.workspaces.map(i=>i.paths.nodeModules)];try{o.subStep('removing "node_modules"'),await Promise.all(s.map(i=>E.default.rm(i,{recursive:!0,force:!0})))}catch{throw new d("Failed to remove node_modules",{type:"error_removing_node_modules"})}}}async function Uo(r){let{project:e,logger:o,options:t}=r;o.subStep(`removing ${X.default.relative(e.paths.root,e.paths.lockfile)}`),t!=null&&t.dry||E.default.rmSync(e.paths.lockfile,{force:!0})}async function Ho(r){let{project:e,options:o}=r;e.packageManager!=="yarn"&&(o!=null&&o.dry||E.default.rmSync(e.paths.lockfile,{force:!0}))}var qo={detect:Dr,read:No,create:Lo,remove:Fo,clean:Uo,convertLock:Ho},Gr=qo;var Bo={pnpm:Rr,yarn:Gr,npm:Er},pe=Bo;async function le({root:r}){let{exists:e,absolute:o}=xr({directory:r});if(!e)throw new d(`Could not find directory at ${o}. Ensure the directory exists.`,{type:"invalid_directory"});for(let{detect:t,read:a}of Object.values(pe))if(await t({workspaceRoot:o}))return a({workspaceRoot:o});throw new d("Could not determine package manager. Add `packageManager` to `package.json` or ensure a lockfile is present.",{type:"package_manager-unable_to_detect"})}var et=c(require("chalk"));var Vo=c(require("execa")),Xo=c(require("ora")),Qo=require("semver");var Ko=c(require("chalk")),Yo=c(require("gradient-string"));async function me({root:r}){let e=r||process.cwd(),o=H(e);if(!o)m.error("Unable to infer repository root - override with --root");else try{return le({root:o})}catch{m.error(`Unable to determine workspace details. Make sure "${r}" is the root, or add "packageManager" to "package.json" or ensure a lockfile is present.`)}process.exit(1)}var Ur=c(require("chalk"));var fe=c(require("fs-extra")),ge=c(require("node-plop")),Or=require("ts-node"),$=c(require("path")),Wr=c(require("inquirer"));var k=class extends Error{constructor(o,t){var a;super(o);this.name="GenerateError",this.type=(a=t==null?void 0:t.type)!=null?a:"unknown",Error.captureStackTrace(this,k)}};var _r=["ts","js","cjs"],rt=$.default.join("turbo","generators"),Mr=_r.map(r=>$.default.join(rt,`config.${r}`)),ot=[...Mr,..._r.map(r=>$.default.join(`plopfile.${r}`))];function Tr({project:r,configPath:e}){(0,Or.register)({transpileOnly:!0,cwd:r.paths.root,compilerOptions:{module:"nodenext",moduleResolution:"nodenext"}});let o=at({project:r}),t;if(e){if(!fe.default.existsSync(e))throw new k(`No config at "${e}"`,{type:"plop_no_config"});try{t=(0,ge.default)(e,{destBasePath:e,force:!1})}catch(a){console.error(a)}}else{for(let a of ot){let n=$.default.join(r.paths.root,a);if(fe.default.existsSync(n))try{t=(0,ge.default)(n,{destBasePath:r.paths.root,force:!1});break}catch(s){console.error(s)}}!t&&o.length>0&&(t=(0,ge.default)(o[0].config,{destBasePath:o[0].root,force:!1}),o.shift())}return t&&o.forEach(a=>{try{t==null||t.load(a.config,{destBasePath:a.root,force:!1})}catch(n){console.error(n)}}),t}function Ne({project:r,configPath:e}){let o=Tr({project:r,configPath:e});if(!o)return[];let a=o.getGeneratorList().map(p=>o.getGenerator(p.name)),n={};a.forEach(p=>{let l=p,f=r.workspaceData.workspaces.find(u=>{if(l.basePath===r.paths.root)return!1;let g=l.basePath.split($.default.sep);return g.pop(),g.pop(),$.default.join("/",...g)==u.paths.root});f?(n[f.name]||(n[f.name]=[]),n[f.name].push(l)):(n.root||(n.root=[]),n.root.push(l))});let s=[],i=void 0;return Object.keys(n).forEach(p=>{p!==i&&s.push(new Wr.default.Separator(p)),s.push(...n[p])}),s}function tt({project:r,generator:e}){let o={root:r.paths.root,workspace:e.basePath?U({cwd:e.basePath,target:"package.json"}):void 0},t={};try{t=ve(e.basePath)}catch{}return{turbo:{paths:o,configs:t}}}function at({project:r}){let e=[];return r.workspaceData.workspaces.forEach(o=>{for(let t of Mr)fe.default.existsSync($.default.join(o.paths.root,t))&&e.push({config:$.default.join(o.paths.root,t),root:o.paths.root})}),e}async function Jr({project:r,generator:e,bypassArgs:o,configPath:t}){let a=Tr({project:r,configPath:t});if(!a)throw new k("Unable to load generators",{type:"plop_unable_to_load_config"});let n=a.getGenerator(e);if(!n)throw new k(`Generator ${e} not found`,{type:"plop_generator_not_found"});let s=await n.runPrompts(o),i=await n.runActions({...s,...tt({project:r,generator:n})},{onComment:p=>{console.info(p)}});if(i.failures&&i.failures.length>0)throw i.failures.forEach(p=>{p instanceof Error?m.error(`Error - ${p.message}`):m.error(`Error - ${p.error}. Unable to ${p.type} to "${p.path}"`)}),new k(`Failed to run "${e}" generator`,{type:"plop_error_running_generator"});i.changes&&i.changes.length>0&&(m.info("Changes made:"),i.changes.forEach(p=>{p.path&&m.item(`${p.path} (${p.type})`)}))}var N=c(require("inquirer"));async function Ir({generators:r,generator:e}){if(e){if(r.find(t=>!(t instanceof N.default.Separator)&&t.name===e))return{selectedGenerator:e};m.warn(`Generator "${e}" not found`),console.log()}return await N.default.prompt({type:"list",name:"selectedGenerator",message:"Select generator to run",choices:r.map(t=>t instanceof N.default.Separator?t:{name:t.description?`  ${t.name}: ${t.description}`:`  ${t.name}`,value:t.name})})}async function Nr(){return N.default.prompt({type:"list",name:"answer",message:"Should the generator config be created with TS or JS?",default:"ts",choices:[{name:"JavaScript",value:"js"},{name:"TypeScript",value:"ts"}]})}async function Lr({message:r}){return N.default.prompt({type:"confirm",name:"answer",message:r})}var Le=c(require("path")),Fe=c(require("fs-extra"));async function Fr({project:r,template:e}){let o=Le.default.join(r.paths.root,"turbo","generators"),t=`simple-${e}`;if(await Fe.default.pathExists(o))throw new k(`Generator config directory already exists at ${o}`,{type:"config_directory_already_exists"});await Fe.default.copy(Le.default.join(__dirname,"templates",t),o,{recursive:!0})}async function Ue({generator:r,project:e,opts:o}){let t=!1,a=Ne({project:e,configPath:o.config});if(!a.length){m.error("No generators found."),console.log();let{answer:s}=await Lr({message:`Would you like to add a config with a sample custom generator to ${e.name}?`});if(s){t=!0;let{answer:i}=await Nr();try{await Fr({project:e,template:i})}catch(p){throw p instanceof k||m.error("Failed to create generator config"),p}if(console.log(),m.info("Generator config successfully created!"),m.info("Loading generator config..."),console.log(),a=Ne({project:e,configPath:o.config}),!a.length){m.error("Error loading generator");return}}else{console.log(),m.dimmed("Learn more about custom Turborepo generators - https://turbo.build/repo/docs/core-concepts/monorepos/code-generation#custom-generators");return}}let{selectedGenerator:n}=await Ir({generators:a,generator:r});try{await Jr({project:e,generator:n,bypassArgs:o.args,configPath:o.config})}catch(s){if(s instanceof k)throw s;let i="Failed to run generator";throw s instanceof Error&&(i=s.message),new k(i,{type:"plop_error_running_generator"})}finally{t&&(console.log(),m.info("Congrats! You just ran your first Turborepo generator"),m.dimmed("Learn more about custom Turborepo generators - https://turbo.build/repo/docs/core-concepts/monorepos/code-generation#custom-generators"))}console.log(),console.log(Ur.default.bold(m.turboGradient(">>> Success!")))}var Ke=c(require("path")),ye=c(require("fs-extra")),eo=c(require("chalk"));var Kr=c(require("fs-extra")),Q=c(require("path")),v=c(require("inquirer")),Yr=require("minimatch"),Be=c(require("validate-npm-package-name"));var He=c(require("path"));var Hr=c(require("path"));function qr({project:r}){let o=r.workspaceData.workspaces.map(a=>Hr.default.relative(r.paths.root,a.paths.root)),t=new Set;return r.workspaceData.globs.forEach(a=>{if(!o.includes(a)){if(a.startsWith("!"))return;{let s=a.split("/")[0];t.add(s)}}}),Array.from(t)}function qe({project:r,workspace:e}){return He.default.relative(r.paths.root,e.paths.root).split(He.default.sep)[0]}function ue({project:r}){let e=qr({project:r}),o=e.includes("apps"),t=e.includes("packages"),a={},n=[];return r.workspaceData.workspaces.forEach(s=>{let i=qe({project:r,workspace:s});i!=="apps"&&n.push(s),a[i]||(a[i]=[]),a[i].push(s)}),{hasRootApps:o,hasRootPackages:t,workspacesByGroup:a,nonAppWorkspaces:n}}var Br=c(require("inquirer"));function de({project:r,type:e,showAllDependencies:o}){let t=ue({project:r}),a=[],n=r.workspaceData.workspaces;o||(e==="app"&&t.hasRootApps?n=t.workspacesByGroup.apps:e==="package"&&t.nonAppWorkspaces.length>0&&(n=t.nonAppWorkspaces));let s;return n.forEach(i=>{let p=qe({project:r,workspace:i});p!==s&&a.push(new Br.default.Separator(p)),s=p,a.push(i)}),a}async function zr({override:r,suggestion:e,type:o}){let{validForNewPackages:t}=(0,Be.default)(r||"");return r&&t?{answer:r}:v.default.prompt({type:"input",name:"answer",default:e,validate:a=>{let{validForNewPackages:n}=(0,Be.default)(a);return n||`Invalid ${o} name`},message:`What is the name of the ${o}?`})}async function Vr({override:r,message:e}){return r?{answer:r}:v.default.prompt({type:"list",name:"answer",message:e!=null?e:"What type of workspace should be added?",choices:[{name:"app",value:"app"},{name:"package",value:"package"}]})}async function Xr({type:r,name:e,destination:o,project:t}){let a=e.includes("/")?e.split("/")[1]:e;if(o){let{valid:p,root:l}=ae(o);if(p)return{absolute:l,relative:Q.default.relative(t.paths.root,l)}}let n,s=ue({project:t});r==="app"&&s.hasRootApps?n=`${t.paths.root}/apps/${a}`:r==="package"&&s.hasRootPackages&&(n=`${t.paths.root}/packages/${a}`);let{answer:i}=await v.default.prompt({type:"input",name:"answer",message:`Where should "${e}" be added?`,default:n?Q.default.relative(t.paths.root,n):void 0,validate:p=>{let l=Q.default.join(t.paths.root,p),{valid:f,error:u}=ae(l),g=t.workspaceData.globs.some(w=>(0,Yr.minimatch)(p,w));return f&&g?!0:g?u:`${p} is not a valid workspace location`}});return{absolute:Q.default.join(t.paths.root,i),relative:i}}async function Qr({override:r,workspaces:e,name:o}){if(r){let a=e.find(n=>n instanceof v.default.Separator?!1:n.name===r);if(a)return{answer:a};m.warn(`Workspace "${r}" not found`),console.log()}return await v.default.prompt({type:"list",name:"answer",loop:!1,pageSize:25,message:`Which workspace should "${o}" start from?`,choices:e.map(a=>a instanceof v.default.Separator?a:{name:`  ${a.name}`,value:a})})}async function Zr({name:r,project:e,source:o,showAllDependencies:t}){let a={dependencies:{},devDependencies:{},peerDependencies:{},optionalDependencies:{}},{answer:n}=await st({message:`Add workspace dependencies to "${r}"?`});if(!n)return a;let{answer:s}=await v.default.prompt({type:"checkbox",name:"answer",message:`Select all dependencies types to modify for "${r}"`,loop:!1,choices:[{name:"dependencies",value:"dependencies"},{name:"devDependencies",value:"devDependencies"},{name:"peerDependencies",value:"peerDependencies"},{name:"optionalDependencies",value:"optionalDependencies"}]}),i=de({project:e,type:"package",showAllDependencies:t}),p=o?Kr.default.readJsonSync(o.paths.packageJson):void 0;for(let l of s){let{answer:f}=await v.default.prompt({type:"checkbox",name:"answer",default:p&&Object.keys((p==null?void 0:p[l])||{}),pageSize:15,message:`Which packages should be added as ${l} to "${r}?`,loop:!1,choices:i.map(g=>g instanceof v.default.Separator?g:{name:`  ${g.name}`,value:g.name})}),u=(p==null?void 0:p[l])||{};if(Object.keys(u).length){let g=new Set(Object.keys(u));f.forEach(w=>{g.has(w)||(u[w]=e.packageManager==="pnpm"?"workspace:*":"*")}),a[l]=u}else a[l]=f.reduce((g,w)=>({...g,[w]:e.packageManager==="pnpm"?"workspace:*":"*"}),{})}return a}async function st({message:r}){return await v.default.prompt({type:"confirm",name:"answer",message:r})}async function ke({project:r,opts:e}){var p;let o,t=e.copy.type==="external"?((p=e.examplePath)==null?void 0:p.split("/").pop())||e.copy.source.split("/").pop():void 0,{answer:a}=await Vr({override:e.type,message:e.copy.source==="external"?`What type of workspace should "${t}" be created as?`:void 0}),{answer:n}=await zr({override:e.name,type:a,suggestion:t});if(e.copy.type==="internal"){let{answer:l}=await Qr({override:e.copy.source,workspaces:de({project:r,type:a}),name:n});o=l}let s=await Xr({type:a,name:n,project:r,destination:e.destination}),i=await Zr({name:n,project:r,source:o,showAllDependencies:e.showAllDependencies});return{type:a,name:n,location:s,source:o,dependencies:i}}async function Ye({project:r,opts:e}){let{name:o,location:t,dependencies:a}=await ke({project:r,opts:e}),n={name:o,version:"0.0.0",private:!0,scripts:{build:"turbo build"}};Object.keys(a).forEach(s=>{let i=a[s];i&&Object.keys(i).length>0&&(n[s]=i)}),ye.default.mkdirSync(t.absolute,{recursive:!0}),ye.default.writeFileSync(Ke.default.join(t.absolute,"package.json"),JSON.stringify(n,null,2)),ye.default.writeFileSync(Ke.default.join(t.absolute,"README.md"),`# \`${o}\``),console.log(),console.log(`${eo.default.bold(m.turboGradient(">>> Success!"))} Created ${o} at "${t.relative}"`)}var ze=c(require("path")),D=c(require("fs-extra")),ro=c(require("chalk"));async function Ve({project:r,opts:e}){let{name:o,type:t,location:a,source:n,dependencies:s}=await ke({project:r,opts:e}),i=ze.default.join(a.absolute,"package.json");if(e.copy.type==="external"){console.log(),m.warn("Some manual modifications may be required."),m.dimmed(`This ${t} may require local dependencies or a different package manager than what is available in this repo`),await Te({appPath:a.absolute,example:e.copy.source,examplePath:e.examplePath});try{if(D.default.existsSync(i)){if((await D.default.readJSON(i)).workspaces)throw new Error("New workspace root detected - unexpected 'workspaces' field in package.json")}else throw new Error("New workspace is missing a package.json file");if(D.default.existsSync(ze.default.join(a.absolute,"pnpm-workspace.yaml")))throw new Error("New workspace root detected - unexpected pnpm-workspace.yaml")}catch(l){let f="UNKNOWN_ERROR";l instanceof Error&&(f=l.message),m.error(f),await D.default.rm(a.absolute,{recursive:!0,force:!0});return}}else if(n){let l=async(u,g)=>!u.includes("node_modules"),f=m.turboLoader(`Creating "${o}" from "${n.name}"...`);f.start(),await D.default.copy(n.paths.root,a.absolute,{filter:l}),f.stop()}let p=await D.default.readJSON(i);p.name=o,Object.keys(s).forEach(l=>{let f=s[l];f&&Object.keys(f).length>0&&(p[l]=f)}),await D.default.writeJSON(i,p,{spaces:2}),console.log(),console.log(`${ro.default.bold(m.turboGradient(">>> Success!"))} Created ${o} at "${a.relative}"`)}function ct(r){let{empty:e,copy:o,...t}=r,a=o===!0||typeof o=="string"?"copy":"empty",n=typeof o=="string"?o:"",s=typeof o=="string"&&o.startsWith("https://")?"external":"internal";return{method:a,copy:{type:s,source:n},...t}}async function Z(r){let e=await me(r),o=ct(r);console.log();let t={project:e,opts:o};o.method==="copy"?(o.copy.type==="external"?m.info(`Copy a remote workspace from ${o.copy.source}`):m.info(`Copy an existing workspace from "${e.name}"`),console.log(),await Ve(t)):(m.info(`Add an empty workspace to "${e.name}"`),console.log(),await Ye(t))}async function ee(r,e){let o=await me(e);console.log(),m.info(`Modify "${o.name}" using custom generators`),console.log(),await Ue({generator:r,project:o,opts:e})}async function Xe(r,e){let o={};try{let t=JSON.parse(e.json||"{}");for(let a in t)o[Je(a,{to:"camel"})]=t[a]}catch(t){console.error("Error parsing arguments",t),process.exit(1)}switch(r){case"workspace":let t=!1,a=o.empty||!0;o.copy===""||o.copy===!0?(t=!0,a=!1):o.copy&&o.copy.length>0&&(t=o.copy,a=!1),o.copy=t,o.empty=a,await Z(o);break;case"run":let{generatorName:n,...s}=o;await ee(n,s);break;default:console.error(`Received unknown command - "${r}" (must be one of "workspace" | "run")`),process.exit(1)}}var re=new y.Command;re.name(oo.default.bold(m.turboGradient("@turbo/gen"))).description("Extend your Turborepo").version(L.version,"-v, --version","Output the current version").helpOption("-h, --help","Display help for command").showHelpAfterError(!1);re.command("run",{isDefault:!0}).alias("r").description("Run custom generators").addArgument(new y.Argument("[generator-name]","The name of the generator to run")).addOption(new y.Option("-c, --config <config>","Generator configuration file (default: turbo/generators/config.js")).addOption(new y.Option("-r, --root <dir>","The root of your repository (default: directory with root turbo.json)")).addOption(new y.Option("-a, --args <args...>","Arguments passed directly to generator").default([])).action(ee);re.command("workspace").aliases(["w"]).description("Add a new package or app to your project").addOption(new y.Option("-n, --name <workspace-name>","Name for the new workspace")).addOption(new y.Option("-b, --empty","Generate an empty workspace").conflicts("copy").default(!0)).addOption(new y.Option("-c, --copy [source]",`Generate a workspace using an existing workspace as a template. Can be the name of a local workspace
      within your monorepo, or a fully qualified GitHub URL with any branch and/or subdirectory.
      `).conflicts("empty")).addOption(new y.Option("-d, --destination <dir>","Where the new workspace should be created")).addOption(new y.Option("-t, --type <type>","The type of workspace to create").choices(["app","package"])).addOption(new y.Option("-r, --root <dir>","The root of your repository (default: directory with root turbo.json)")).addOption(new y.Option("-p, --example-path <path-to-example>",`In a rare case, your GitHub URL might contain a branch name with
a slash (e.g. bug/fix-1) and the path to the example (e.g. foo/bar).
In this case, you must specify the path to the example separately:
--example-path foo/bar
`).implies({copy:!0})).addOption(new y.Option("--show-all-dependencies","Do not filter available dependencies by the workspace type").default(!1)).action(Z);re.command("raw",{hidden:!0}).argument("<type>","The type of generator to run").addOption(new y.Option("--json <arguments>","Arguments as raw JSON")).action(Xe);re.parseAsync().then(te).catch(async r=>{console.log(),r instanceof k?m.error(r.message):(m.error("Unexpected error. Please report it as a bug:"),console.log(r.message)),console.log(),await te(),process.exit(1)});
